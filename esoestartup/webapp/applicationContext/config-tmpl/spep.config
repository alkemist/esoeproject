#
#
# Enterprise Sign On Engine (ESOE), Java Service Provider Enforcement Point (SPEP) global configuration file
#
# Changing values in this file WILL effect the way the ESOE Manager operates in production, please change with
# care and in consultation with configuration documentation.
#
# Author: Shaun Mangelsdorf
# Date: 04/12/2006
#

###########################################################################################################
#
# Deployment specific configuration
####

# KeyStore 1
keystorePath=${spep.data}/config/spepKeystore.ks
keystorePassword=$esoeBean.getEsoeManagerKeyStorePassphrase()
spepKeyAlias=$esoeBean.getEsoeManagerKeyPairName()
spepKeyPassword=$esoeBean.getEsoeManagerKeyPairPassphrase()
metadataKeyAlias=$esoeBean.getEsoeMetadataKeyPairName()

# The unique identifier of the authenticating ESOE.
esoeIdentifier=$esoeBean.getEsoeEntityID()

# The unique identifier of the service.
spepIdentifier=$esoeBean.getEntityID()

# The URL to retrieve the metadata document from
metadataUrl=$esoeBean.getServiceURL()/metadata/retrieve.htm

# string description of the service
serverInfo=$esoeBean.getServiceName()

# Unique identifier of this service node
nodeIdentifier=$nodeID

# Indicies of this service node 
attributeConsumingServiceIndex=$nodeID
assertionConsumerServiceIndex=$nodeID
authzCacheIndex=$nodeID

# Address of the service host in use without any application path e.g. https://myserver.company.com or https://myotherserver.company.com:8443 NOT https://myserver.company.com/myapp/
serviceHost=$esoeBean.getEsoeManagerHost()

# ip addresses of this host SPEP
ipAddresses=$esoeBean.getEsoeManagerIP()

# the URL to redirect unauthenticated users to
loginRedirect=$serviceNodeURL/spep/sso?redirectURL={0}

# Default URL of the service
defaultURL=$esoeBean.getServiceURL()

# specify cookies to clear when am authentication session is destroyed
# strings are of the format: cookie_name [space] cookie_domain (optional) [space] cookie_path (optional)
logoutClearCookie.1=spepSession

###########################################################################################################
#
# You should not need to edit anything below this line, advanced changes only
####

# Is the SPEP configured in lazy initialization mode
lazyInit=false

# deny | permit - Lazy Init default mode, if a lazyinit-resource is not matched what action should the filter take on access to the resource (inverted when there is a match as specified by resources below)
#lazyInitDefaultAction=deny

# Forced Initialization Queries. MUST start from lazyInit-resource-1 and MUST progress in numerical order upto a maximum value of 10000 (lazyInit-resource-10000)
# This is only populated when SPEP is acting in a lazy mode, regex patterns may be applied here
# Extreme caution to carefully validate your web application access requirements is recommended with the system is in lazyInit mode
# Name/Value parameters from the query string make up part of the matching, /secure.jsp.* should be used to match for example /secure.jsp?custID=1234
#
# Values here should only contain the path and query string of your application, eg for https://myspep.company.org/myapp you would enter /secure.jsp.* to match any request for resources
# located at https://myspep.company.org/myapp/secure.jsp

#lazyInit-resource-1=
#lazyInit-resource-2=

# SSO web application redirect (relative)
ssoRedirect=/spep/sso?redirectURL={0}

# authentication token names
spepTokenName=spepSession
# Identifier name for site wide identifier indicating ESOE knows about this users session
commonDomainTokenName=_saml_idp

# Interval in seconds after which to retry the SPEP Startup request, if startup fails
startupRetryInterval=20

# interval in seconds between polling the metadata URL for the metadata document
metadataInterval=120

# allowed time in seconds that a document will remain valid from the time of creation
allowedTimeSkew=60

# time in seconds between polling the identifier cache for expired identifiers
identifierCacheInterval=3600

# time in seconds that an identifier will remain active
identifierCacheTimeout=36000

# Time that sessions which have yet to complete an authentication event are considered valid
sessionCacheTimeout=120

# Time in seconds that session cache cleanup will run looking for expired unauthenticated sessions
# and sessions which have expired as dictated by the ESOE
sessionCacheInterval=120

# Default authorization policy to apply when due to problems with PDP or other unusal situations occurs access control result can't be computed
defaultPolicyDecision=deny
