#
#
# Enterprise Sign On Engine (ESOE) Manager global configuration file
#
# Changing values in this file WILL effect the way the ESOE Manager operates in production, please change with
# care and in consultation with configuration documentation.
#
#
# Author: Bradley Beddoes
# Date: 04/04/2007
#

###########################################################################################################
#
# Deployment specific configuration
####

## Database Server 1 Connection
databaseDriver-1=$esoeBean.getDatbaseDriverString()
databaseURL-1=$esoeBean.getDatabaseURL()
databaseUsername-1=$esoeBean.getDatabaseUsername()
databasePassword-1=$esoeBean.getDatabasePassword()
databaseRemoveAbandoned-1=true
databaseRemoveAbandonedTimeout-1=300
databaseLogAbandoned-1=true
databaseMaxIdle-1=5
databaseMaxActive-1=25

## Keystore 1
keystorePath-1=WEB-INF/metadataKeystore.ks
keystorePassword-1=$esoeBean.getEsoeMetadataKeyStorePassphrase()
keyAlias-1=$esoeBean.getEsoeMetadataKeyPairName()
keyPassword-1=$esoeBean.getEsoeMetadataKeyPairPassphrase()

## Organization Details
organizationName=$esoeBean.getEsoeOrganizationName()
organizationDisplayName=$esoeBean.getEsoeOrganizationDisplayName()
organizationURL=$esoeBean.getEsoeOrganizationURL()

## Crypto
# Issuer DN to assign to keys generated for remote SPEP
issuerDN=$esoeBean.getCertIssuerDN()
# Issuer email address to assign to keys to generated for remote SPEP
issuerEmail=$esoeBean.getCertIssuerEmailAddress()

## Metadata
# ESOE Trusted ID
esoeTrustedID=$esoeBean.getIdpEntityID()
# Directory to store all historical records of metadata 
historyDirectory=$esoeBean.getWriteableDirectory()


###########################################################################################################
#
# You should not need to edit anything below this line, advanced changes only
####

## Crypto
# Size of keys to generate for remote SPEP
keySize=2048
# Period of time in years that generated keys should be active
certExpiryInterval=2

## Metadata
# Filename to store historical metadata as (system appends timestamp to name)
historyFileName=metadata-historical
# How often new metadata should be created from the database
refreshInterval=600
# Should services be put straight into metadata on creation
activeFlag=false

## Attributes
# Config XML specifying which attributes the editor makes available for registering SPEP's
attributeConfig=WEB-INF/supportedAttributes.xml

## Service Defaults
# Java Powered Services
# Assertion Consumer Service Endpoint
java.defaultACS=/spep/sso
# Single Logout Service Endpoint
java.defaultSLS=/spep/services/spep/singleLogout
# Cache Clear Service Endpoint
java.defaultCCS=/spep/services/spep/authzCacheClear

# Apache Powered Services
# Assertion Consumer Service Endpoint
apache.defaultACS=/ws/spep/ACS-ap
# Single Logout Service Endpoint
apache.defaultSLS=/ws/spep/LCS-ap
# Cache Clear Service Endpoint
apache.defaultCCS=/ws/spep/CCS-ap

# IIS Powered Services
# Assertion Consumer Service Endpoint
iis.defaultACS=/ws/spep/ACS-iis
# Single Logout Service Endpoint
iis.defaultSLS=/ws/spep/LCS-iis
# Cache Clear Service Endpoint
iis.defaultCCS=/ws/spep/CCS-iis

# Default Authorization Policy
defaultPolicy=WEB-INF/defaultServicePolicy.xml

###########################################################################################################
#
# Spring configuration integration, you REALLY shouldn't need to edit anything below this line.
####

### Datasources

## iBatis Data Source
ibatisdatasource.driver=${databaseDriver-1}
ibatisdatasource.url=${databaseURL-1}
ibatisdatasource.username=${databaseUsername-1}
ibatisdatasource.password=${databasePassword-1}
ibatisdatasource.removeAbandoned=${databaseRemoveAbandoned-1}
ibatisdatasource.removeAbandonedTimeout=${databaseRemoveAbandonedTimeout-1}
ibatisdatasource.logAbandoned=${databaseLogAbandoned-1}
ibatisdatasource.maxIdle=${databaseMaxIdle-1}
ibatisdatasource.maxActive=${databaseMaxActive-1}

## SQL Maps
sqlmapclient.config=WEB-INF/sqlMapConfig.xml

## DAO
writedao.spepEnabledOnCreation=spepEnabledOnCreation

## ESOE Manager Keystore
esoemanagerkeystoreresolver.keystorePath=${keystorePath-1}
esoemanagerkeystoreresolver.keystorePassphrase=${keystorePassword-1}
esoemanagerkeystoreresolver.keyAlias=${keyAlias-1}
esoemanagerkeystoreresolver.keyPassphrase=${keyPassword-1}

### Processors
## Crypto Processor
cryptoprocessor.certIssuerDN=${issuerDN}
cryptoprocessor.certIssuerEmail=${issuerEmail}
cryptoprocessor.keySize=${keySize}
cryptoprocessor.certExpiryInterval=${certExpiryInterval}

## Attribute Processor
attributeprocessor.configfile=${attributeConfig}

### Metadata 
##Metadata update monitor
metadataupdatemonitor.historyDir=${historyDirectory}
metadataupdatemonitor.historyFilename=${historyFileName}
metadataupdatemonitor.refreshInterval=${refreshInterval}

### Business Logic
## Register Service Logic
registerservicelogic.organizationName=${organizationName}
registerservicelogic.organizationDisplayName=${organizationDisplayName}
registerservicelogic.organizationURL=${organizationURL}
registerservicelogic.activeFlag=${activeFlag}

registerservicelogic.defaultPolicy=${defaultPolicy}

### Pages

registerservicespeppage.java.defaultACS=${java.defaultACS}
registerservicespeppage.apache.defaultACS=${apache.defaultACS}
registerservicespeppage.iis.defaultACS=${iis.defaultACS}
registerservicespeppage.java.defaultSLS=${java.defaultSLS}
registerservicespeppage.apache.defaultSLS=${apache.defaultSLS}
registerservicespeppage.iis.defaultSLS=${iis.defaultSLS}
registerservicespeppage.java.defaultCCS=${java.defaultCCS}
registerservicespeppage.apache.defaultCCS=${apache.defaultCCS}
registerservicespeppage.iis.defaultCCS=${iis.defaultCCS}

servicenodeconfigurationpage.esoeTrustedID=${esoeTrustedID}
servicenodeconfigurationpage.metadataKeyName=${keyAlias-1}