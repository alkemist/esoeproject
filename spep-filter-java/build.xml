<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== 
	Author: Bradley Beddoes
	Date: 20/11/2006                                                        
	Purpose: Builds the SPEP Filter for java for various deployment environments
	
	This build file expects the system to present values for:
	jar.repository - Base directory of binary repository
	junit.test.regression.reports  - Directory to store XML output for regression testing
	
	Generally this is specified in localbuild.properties localbuild.properties is to be created by the developer and NOT STORED IN SVN                                                        
	====================================================================== -->

<project name="spep-filter-java" default="dev-jar">

	<property file="localbuild.properties" />
	<property file="build.properties" />

	<description>
		Builds the Service Provider Enforcement Point Filter for various deployment environments
	</description>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${ant.contrib}" />
		</classpath>
	</taskdef>

	<taskdef resource="emma_ant.properties">
		<classpath>
			<pathelement location="${ant.emma}" />
			<pathelement location="${ant.emma_ant}" />
		</classpath>
	</taskdef>

	<!-- 
		SPEP Filter Development environment compilation and war creation
	-->
	<target name="dev-war" depends="dev-jar" description="Assembles SPEP Filter war">
		<war destfile="${output.dev}/${output.dev.war}" webxml="${war.dev.descriptor}">
			<lib file="${output.dev}/${output.dev.jar}.jar" />
			<metainf dir="${webapp.metainf}"></metainf>
			<fileset dir="${webapp.content}">
				<include name="**/*.jsp" />
				<include name="**/*.htm*" />
			</fileset>
		</war>
	</target>

	<target name="dev-jar" depends="dev-build" description="Assembles SPEP filter jar">
		<jar destfile="${output.dev}/${output.dev.jar}.jar">
			<fileset dir="${src}">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${output.dev.build}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>

	<target name="dev-build" depends="setup" description="Compiles SPEP code base">
		<javac source="1.5" target="1.5" destdir="${output.dev.build}" srcdir="${src}"
			classpathref="spep.classpath" debug="true" debuglevel="lines,vars,source" />
	</target>

	<!-- 
		SPEP Filter JUnit test execution and report generation, includes automated code
		coverage statistics generated by emma, emma.sourceforge.net
	-->
	<target name="junit" depends="junit-regression"
		description="Invokes all unit tests defined for the SPEP Filter">

		<!-- Combine coverage reports to single view -->
		<emma>
			<report sourcepath="${src}">
				<fileset dir="${output.dev.coverage.dir}">
					<include name="**/*.emma" />
				</fileset>

				<txt outfile="${output.dev.coverage.dir}/coverage.txt" />
				<html outfile="${output.dev.coverage.dir}/coverage.html" />
				<xml outfile="${output.dev.coverage.dir}/coverage.xml" />
			</report>
		</emma>
	</target>

	<target name="emma-instr" description="Configures SPEP filter jar for emma coverage reporting">
		<emma>
			<instr mode="fullcopy" outdir="${output.dev.coverage.dir}" merge="false"
				metadatafile="${output.dev.coverage.dir}/metadata.emma">
				<instrpath>
					<fileset dir="${output.dev}" includes="**/*.jar" />
				</instrpath>
				<!-- Coverage report on all SPEP Filter code except WS code, SQLMap implementations, dynamically generated message classes, 
					exception implementations and log4j extenstions (Currently also removes testing of AD integrated code on unix) -->
				<filter includes="com.qut.middleware.spep.filter.*" />
			</instr>
		</emma>
	</target>

	<target name="junit-regression-build" depends="dev-jar"
		description="Compiles SPEP Filter regression tests code base">
		<javac source="1.5" target="1.5" destdir="${output.test.regression.build}"
			srcdir="${src.tests.regression}" debug="true" debuglevel="lines,vars,source">
			<classpath>
				<path refid="spep.classpath" />
				<path path="${output.dev}/${output.dev.jar}.jar" />
			</classpath>
		</javac>
	</target>

	<target name="junit-regression" depends="junit-regression-build, emma-instr"
		description="Invokes all junit regression tests for the SPEP Filter">
		<mkdir dir="${junit.test.regression.reports}" />

		<junit printsummary="yes" haltonfailure="no" fork="yes">
			<classpath>
				<path path="${output.dev.coverage.dir}/lib/${output.dev.jar}.jar" />
				<path path="${output.test.regression.build}" />
				<path refid="spep.classpath" />
				<!--  Allow tests to resolve locally required resouces such as xml config files -->
				<path path="${src.tests.regression}" />
			</classpath>

			<jvmarg
				value="-Demma.coverage.out.file=${output.dev.coverage.regression.dir}/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />

			<formatter type="xml" />

			<batchtest fork="yes" todir="${junit.test.regression.reports}">
				<fileset dir="${output.test.regression.build}">
					<include name="**/*Test*.class" />
				</fileset>
			</batchtest>
		</junit>

		<emma>
			<report sourcepath="${src}">
				<fileset dir="${output.dev.coverage.regression.dir}">
					<include name="*.emma" />
				</fileset>
				<fileset file="${output.dev.coverage.dir}/metadata.emma" />

				<txt outfile="${output.dev.coverage.regression.dir}/coverage.txt" />
				<html outfile="${output.dev.coverage.regression.dir}/coverage.html" />
				<xml outfile="${output.dev.coverage.regression.dir}/coverage.xml" />
			</report>
		</emma>

	</target>

	<!-- 
		General operations to setup and cleanup environment 
	-->
	<target name="setup" depends="clean" description="Creates base directories">
		<mkdir dir="${output.dev.build}" />
		<mkdir dir="${output.dev}" />
		<mkdir dir="${output.test.regression.build}" />
		<mkdir dir="${output.test.functional.build}" />
		<mkdir dir="${output.dev.coverage.dir}" />
		<mkdir dir="${output.dev.coverage.functional.dir}" />
		<mkdir dir="${output.dev.coverage.regression.dir}" />
	</target>

	<target name="clean" description="Removes base directories">
		<delete dir="${output.dev.build}" />
		<delete dir="${output.dev}" />
		<delete dir="${output.test.regression.build}" />
		<delete dir="${output.test.functional.build}" />
		<delete dir="${output.dev.coverage.dir}" />
		<delete dir="${output.dev.coverage.functional.dir}" />
		<delete dir="${output.dev.coverage.regression.dir}" />
	</target>

	<path id="spep.classpath">
		<fileset dir="${com.qut.middleware.spep}" id="spep">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${com.qut.middleware.saml2lib-j}" id="saml2">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${javax.servlet}" id="servlet">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${javax.xml.jaxb}" id="jaxb">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${javax.xml.crypto}" id="xml.crypto">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.apache.xerces}" id="xerces">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.apache.xalan}" id="xalan">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.easymock}" id="easymock">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.junit}" id="junit4">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${net.sourceforge.emma}" id="emma">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.springframework.jakarta-commons}" id="commons-codec">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${org.springframework.log4j}" id="spring.log4j">
			<include name="**/*.jar" />
		</fileset>
				
	</path>

</project>