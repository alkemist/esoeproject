<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== 
	Author: Bradley Beddoes
	Date: 20/11/2006                                                        
	Purpose: Builds the Service Provider Enforcement Point for JVM 1.4
	====================================================================== -->

<project name="spepjava-jvm14" xmlns:ivy="antlib:org.apache.ivy.ant">

	<property file="build.properties" />
	
	<import file="${esoebuild}/esoe.xml"/>

	<description>
		Builds the Service Provider Enforcement Point for JVM 1.4
	</description>

	<taskdef name="retrotranslator" classname="net.sf.retrotranslator.transformer.RetrotranslatorTask">
		<classpath>
			<pathelement location="${ant.retrotranslator_concurrent}" />
			<pathelement location="${ant.retrotranslator_runtime}" />
			<pathelement location="${ant.retrotranslator_transformer}" />
		</classpath>
	</taskdef>

	<target name="release" depends="war" description="Builds a gzipped tar for release of the SPEP (generally utilised by ESOE Startup)">
		<copy file="../spepjava/spep.config" todir="${output}/${output.tar}" />
		<copy file="${output}/${output.war}" todir="${output}/${output.tar}" />

		<copy file="${output}/${output.jaxb.jar}.jar" todir="${artifacts.release.endorsed}" />
		<copy file="../spepjava/${artifacts.release.endorsed}/jsr173_1.0_api.jar" todir="${artifacts.release.endorsed}" />
		<copy file="../spepjava/${artifacts.release.endorsed}/activation.jar" todir="${artifacts.release.endorsed}" />
		<tar destfile="${output}/${output.tar}/${output.endorsed.tar}.tar.gz" basedir="${artifacts.release.endorsed}" compression="gzip" />

		<tar destfile="${output}/${output.tar}.tar.gz" basedir="${output}/${output.tar}" compression="gzip">
			<include name="**/*.war" />
			<include name="**/*.tar.gz" />
			<include name="**/*.config" />
		</tar>
	</target>
	
	<target name="war" depends="jar, resolve:all" description="Assembles SPEP war">
		<war destfile="${output}/${output.war}" webxml="${war.descriptor}">
			
			<lib file="${output}/${output.jaxb.jar}.jar"/>
			<lib file="${output}/${output.spep.jar}.jar"/>
			<lib file="${output}/${output.saml2.jar}.jar"/>
			<lib dir="${artifacts.runtime}"/>
			
			<classes dir="../spepjava/${webapp.classes}">
				<include name="**/*" />
			</classes>
			<webinf dir="../spepjava/${webapp.descriptors}">
				<include name="**/*.xml" />
				<exclude name="spep-*.xml" />
			</webinf>
			<metainf dir="../spepjava/${webapp.metainf}">
				<include name="**/*.xml" />
			</metainf>
		</war>
	</target>

	<target name="jar" depends="resolve:all, jar-jaxb, jar-spepjava" />

	<target name="jar-jaxb" depends="translate-jaxb" description="Assembles JVM 1.4 compliant JAXB jar">
		<jar destfile="${output}/${output.jaxb.jar}.jar">
			<fileset dir="${build.jaxb}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>

	<target name="jar-spepjava" depends="translate-spepjava, translate-spepjavainterfaces" description="Assembles JVM 1.4 compliant SPEPJava and SAML2Lib-j  jar">
		<jar destfile="${output}/${output.spep.jar}.jar">
			<fileset dir="${build.spepjava}">
				<include name="**/*" />
				<exclude name="**/middleware/saml2/**" />
				<exclude name="**/org/**" />
			</fileset>
		</jar>

		<jar destfile="${output}/${output.saml2.jar}.jar">
			<fileset dir="${build.spepjava}">
				<include name="**/*" />
				<exclude name="**/middleware/spep/**" />
			</fileset>
		</jar>
		
		<jar destfile="${output}/${output.spep.interfaces.jar}.jar">
			<fileset dir="${build.spepjavainterfaces}">
				<include name="**/*" />
				<exclude name="**/middleware/saml2/**" />
				<exclude name="**/org/**" />
			</fileset>
		</jar>
	</target>



	<target name="translate-jaxb" depends="translate-resolve">
		<retrotranslator destdir="${build.jaxb}" verify="true">
			<jarfileset dir="${artifacts.jaxb}" includes="**/*.jar" />
			<classpath location="${java142.home}/jre/lib/rt.jar" />
			<classpath>
				<pathelement location="${ant.retrotranslator_concurrent}" />
				<pathelement location="${ant.retrotranslator_runtime}" />
				<pathelement location="${ant.retrotranslator_transformer}" />
				<fileset dir="${artifacts.compile}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${artifacts.provided}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</retrotranslator>
	</target>

	<target name="translate-spepjava" depends="translate-resolve">
		<retrotranslator destdir="${build.spepjava}" verify="true">
			<jarfileset dir="${artifacts.spepjava}" includes="**/*" excludes="**/spep-interfaces.jar" />
			<classpath location="${java142.home}/jre/lib/rt.jar" />
			<classpath>
				<pathelement location="${ant.retrotranslator_concurrent}" />
				<pathelement location="${ant.retrotranslator_runtime}" />
				<pathelement location="${ant.retrotranslator_transformer}" />
				<fileset dir="${artifacts.compile}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${artifacts.provided}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</retrotranslator>
	</target>
	
	<target name="translate-spepjavainterfaces" depends="translate-resolve">
		<retrotranslator destdir="${build.spepjavainterfaces}" verify="true">
			<jarfileset dir="${artifacts.spepjavainterfaces}" includes="**/*" />
			<classpath location="${java142.home}/jre/lib/rt.jar" />
			<classpath>
				<pathelement location="${ant.retrotranslator_concurrent}" />
				<pathelement location="${ant.retrotranslator_runtime}" />
				<pathelement location="${ant.retrotranslator_transformer}" />
				<fileset dir="${artifacts.compile}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${artifacts.provided}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</retrotranslator>
	</target>

	<target name="translate-resolve">
		<!-- This is undertaken manually as the ivy configuration required to extract just small portions
			of our complex dependency graph is a lot more hideous-->

		<copy file="../spepjava/lib/provided/jaxb-api.jar" todir="${artifacts.jaxb}" />
		<copy file="../spepjava/lib/provided/jaxb-impl.jar" todir="${artifacts.jaxb}" />
		<copy file="../spepjava/lib/compile/saml2lib-j.jar" todir="${artifacts.spepjava}" />
		<copy file="../spepjava/lib/compile/esoecrypto.jar" todir="${artifacts.spepjava}" />
		<copy file="../spepjava/lib/compile/saml2metadata.jar" todir="${artifacts.spepjava}" />
		<copy file="../spepjava/dist/spep.jar" todir="${artifacts.spepjava}" />
		<copy file="../spepjava/dist/spep-interfaces.jar" todir="${artifacts.spepjavainterfaces}" />

	</target>

	<target name="setup" depends="clean" description="Creates base directories">
		<mkdir dir="${output.build}" />
		<mkdir dir="${build.spepjava}" />
		<mkdir dir="${build.jaxb}" />
		<mkdir dir="${artifacts.jaxb}" />
		<mkdir dir="${artifacts.saml2java}" />
		<mkdir dir="${artifacts.spepjava}" />
		<mkdir dir="${artifacts.spepjavainterfaces}" />
		<mkdir dir="${output}" />
		<mkdir dir="${artifacts.release.shared}" />
		<mkdir dir="${artifacts.release.endorsed}" />
		<mkdir dir="${artifacts.release}" />
		<mkdir dir="${output}/${output.tar}" />
	</target>

	<target name="clean" description="Removes base directories">
		<delete dir="${output.build}" />
		<delete dir="${output}" />
		<delete dir="${webservice.deploy}" />
		<delete dir="${output.junit.dir}" />
		<delete dir="${artifacts.release.shared}" />
		<delete dir="${artifacts.release.endorsed}" />
		<delete dir="${artifacts.release}" />
		<delete dir="${output}/${output.tar}" />
	</target>

	<target name="javadoc" description="Create Javadocs">
		<mkdir dir="${output.javadoc}" />
		<javadoc destdir="${output.javadoc}" sourcepath="${src}">
			<classpath refid="spep.classpath" />
		</javadoc>
	</target>

</project>