#
#
# Enterprise Sign On Engine (ESOE), Service Provider Enforcement Point (SPEP) global configuration file
#
# Changing values in this file WILL effect the way the SPEP operates in production, please change with
# care and in consultation with configuration documentation.
#
# Author: Shaun Mangelsdorf
# Date: 04/12/2006
#

## ESOE Startup/Manager will advise details below this line

# The unique identifier of the service. NOTE: This is not the same as the index node ID
spepIdentifier=

# The unique identifier of the authenticating ESOE.
esoeIdentifier=

# The URL to retrieve the metadata document from
metadataUrl=

# Path to look for schema documents as installed by the SAML2 library.
schemaPath=/usr/local/share/spep-0.1/schema

# path containing the SPEP key pair and trusted metadata cert
keyPath=/usr/local/etc/spep/keys

# Private key alias for this SPEP
spepKeyAlias=

# Key filenames. These should exist in keyPath specified above, and correspond to 
# the keys issued by ESOE manager.
spepPrivateKeyFilename=spep.key
spepPublicKeyFilename=spep.crt

metadataPublicKeyFilename=metadata.crt


# string description of the service
serverInfo=Default SPEP Deployment. Please change this message.

# Unique identifier of this service node
nodeIdentifier=

# Indicies of this service node. Usually these will be the same as the node identifier.
attributeConsumingServiceIndex=
assertionConsumerServiceIndex=
authzCacheIndex=


## Administrators must configure details below this line

# Port for the SPEP daemon to listen on.
spepDaemonPort=7142

# Attribute renaming. Space separated such as:
#attributeRename=OriginalName NewName
#attributeRename=uid username

# Username attribute - the username to tell the web server is logged in.
# as an example - in Apache, this is mapped to REMOTE_USER
# Attribute renames are applied BEFORE this, so you will need to use the "new name"
# of the attribute if you have renamed it.
usernameAttribute=username

# Prefix to add to attribute names before inserting into the web environment.
attributeNamePrefix=SPEP_ATTR_
attributeValueSeparator=|

# authentication token (cookie) names
tokenName=spep-session
tokenDomain=

# ip addresses of this host SPEP
ipAddresses=

# the URL to redirect unauthenticated users to
loginRedirect=https://www.example.com/spep/sso?redirectURL=%s

# Default URL of the service
defaultUrl=https://www.example.com/secure/index.html

# specify cookies to clear when am authentication session is destroyed
# strings are of the format: cookie_name [space] cookie_domain (optional) [space] cookie_path (optional)
# This does nothing in Alpha 1. Will be fixed in Alpha 2.
#logoutClearCookie=spep-session

# interval in seconds to retry the SPEP Startup request, if startup fails
startupRetryInterval=60

# interval in seconds between polling the metadata URL for the metadata document
metadataInterval=120

# allowed time in seconds that a document will remain valid from the time of creation
allowedTimeSkew=60

# time in seconds between polling the identifier cache for expired identifiers
identifierCacheInterval=3600

# time in seconds that an identifier will remain active
identifierCacheTimeout=36000

# Time that sessions which have yet to complete and authentication event are considered valid
sessionCacheTimeout=120

# Time in seconds that session cache cleanup will run looking for expired unauthenticated sessions
# and sessions which have expired as dictated by the ESOE
sessionCacheInterval=60

###########################################################################################################
###########################################################################################################

####
# You should not need to edit anything below this line
# Advanced users only
####

# default authorization policy for queries with no definite outcome. For example if the SPEP cannot
# communicate with the ESOE and has no cached entry for the current request
defaultPolicyDecision=deny

